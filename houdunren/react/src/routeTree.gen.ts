/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as FrontRouteImport } from './pages/front/route'
import { Route as AuthRegisterImport } from './pages/auth/register'
import { Route as AuthLoginImport } from './pages/auth/login'
import { Route as AuthForgetImport } from './pages/auth/forget'
import { Route as FrontVideoIndexImport } from './pages/front/video/index'
import { Route as FrontTopicIndexImport } from './pages/front/topic/index'
import { Route as FrontSubscribeIndexImport } from './pages/front/subscribe/index'
import { Route as FrontSignIndexImport } from './pages/front/sign/index'
import { Route as FrontLessonIndexImport } from './pages/front/Lesson/index'
import { Route as FrontVideoShowImport } from './pages/front/video/show'
import { Route as FrontTopicShowImport } from './pages/front/topic/show'
import { Route as FrontChapterSystemImport } from './pages/front/chapter/system'
import { Route as FrontChapterShowImport } from './pages/front/chapter/show'
import { Route as FrontChapterProjectImport } from './pages/front/chapter/project'
import { Route as FrontLessonShowImport } from './pages/front/Lesson/show'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const FrontAboutLazyImport = createFileRoute('/front/about')()
const Error404LazyImport = createFileRoute('/error/404')()

// Create/Update Routes

const FrontRouteRoute = FrontRouteImport.update({
  path: '/front',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

const FrontAboutLazyRoute = FrontAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => FrontRouteRoute,
} as any).lazy(() => import('./pages/front/about.lazy').then((d) => d.Route))

const Error404LazyRoute = Error404LazyImport.update({
  path: '/error/404',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/error/404.lazy').then((d) => d.Route))

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgetRoute = AuthForgetImport.update({
  path: '/auth/forget',
  getParentRoute: () => rootRoute,
} as any)

const FrontVideoIndexRoute = FrontVideoIndexImport.update({
  path: '/video/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontTopicIndexRoute = FrontTopicIndexImport.update({
  path: '/topic/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontSubscribeIndexRoute = FrontSubscribeIndexImport.update({
  path: '/subscribe/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontSignIndexRoute = FrontSignIndexImport.update({
  path: '/sign/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontLessonIndexRoute = FrontLessonIndexImport.update({
  path: '/Lesson/',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontVideoShowRoute = FrontVideoShowImport.update({
  path: '/video/show',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontTopicShowRoute = FrontTopicShowImport.update({
  path: '/topic/show',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontChapterSystemRoute = FrontChapterSystemImport.update({
  path: '/chapter/system',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontChapterShowRoute = FrontChapterShowImport.update({
  path: '/chapter/show',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontChapterProjectRoute = FrontChapterProjectImport.update({
  path: '/chapter/project',
  getParentRoute: () => FrontRouteRoute,
} as any)

const FrontLessonShowRoute = FrontLessonShowImport.update({
  path: '/Lesson/show',
  getParentRoute: () => FrontRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/front': {
      id: '/front'
      path: '/front'
      fullPath: '/front'
      preLoaderRoute: typeof FrontRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/forget': {
      id: '/auth/forget'
      path: '/auth/forget'
      fullPath: '/auth/forget'
      preLoaderRoute: typeof AuthForgetImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/error/404': {
      id: '/error/404'
      path: '/error/404'
      fullPath: '/error/404'
      preLoaderRoute: typeof Error404LazyImport
      parentRoute: typeof rootRoute
    }
    '/front/about': {
      id: '/front/about'
      path: '/about'
      fullPath: '/front/about'
      preLoaderRoute: typeof FrontAboutLazyImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/Lesson/show': {
      id: '/front/Lesson/show'
      path: '/Lesson/show'
      fullPath: '/front/Lesson/show'
      preLoaderRoute: typeof FrontLessonShowImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/chapter/project': {
      id: '/front/chapter/project'
      path: '/chapter/project'
      fullPath: '/front/chapter/project'
      preLoaderRoute: typeof FrontChapterProjectImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/chapter/show': {
      id: '/front/chapter/show'
      path: '/chapter/show'
      fullPath: '/front/chapter/show'
      preLoaderRoute: typeof FrontChapterShowImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/chapter/system': {
      id: '/front/chapter/system'
      path: '/chapter/system'
      fullPath: '/front/chapter/system'
      preLoaderRoute: typeof FrontChapterSystemImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/topic/show': {
      id: '/front/topic/show'
      path: '/topic/show'
      fullPath: '/front/topic/show'
      preLoaderRoute: typeof FrontTopicShowImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/video/show': {
      id: '/front/video/show'
      path: '/video/show'
      fullPath: '/front/video/show'
      preLoaderRoute: typeof FrontVideoShowImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/Lesson/': {
      id: '/front/Lesson/'
      path: '/Lesson'
      fullPath: '/front/Lesson'
      preLoaderRoute: typeof FrontLessonIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/sign/': {
      id: '/front/sign/'
      path: '/sign'
      fullPath: '/front/sign'
      preLoaderRoute: typeof FrontSignIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/subscribe/': {
      id: '/front/subscribe/'
      path: '/subscribe'
      fullPath: '/front/subscribe'
      preLoaderRoute: typeof FrontSubscribeIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/topic/': {
      id: '/front/topic/'
      path: '/topic'
      fullPath: '/front/topic'
      preLoaderRoute: typeof FrontTopicIndexImport
      parentRoute: typeof FrontRouteImport
    }
    '/front/video/': {
      id: '/front/video/'
      path: '/video'
      fullPath: '/front/video'
      preLoaderRoute: typeof FrontVideoIndexImport
      parentRoute: typeof FrontRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  FrontRouteRoute: FrontRouteRoute.addChildren({
    FrontAboutLazyRoute,
    FrontLessonShowRoute,
    FrontChapterProjectRoute,
    FrontChapterShowRoute,
    FrontChapterSystemRoute,
    FrontTopicShowRoute,
    FrontVideoShowRoute,
    FrontLessonIndexRoute,
    FrontSignIndexRoute,
    FrontSubscribeIndexRoute,
    FrontTopicIndexRoute,
    FrontVideoIndexRoute,
  }),
  AuthForgetRoute,
  AuthLoginRoute,
  AuthRegisterRoute,
  Error404LazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/front",
        "/auth/forget",
        "/auth/login",
        "/auth/register",
        "/error/404"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/front": {
      "filePath": "front/route.tsx",
      "children": [
        "/front/about",
        "/front/Lesson/show",
        "/front/chapter/project",
        "/front/chapter/show",
        "/front/chapter/system",
        "/front/topic/show",
        "/front/video/show",
        "/front/Lesson/",
        "/front/sign/",
        "/front/subscribe/",
        "/front/topic/",
        "/front/video/"
      ]
    },
    "/auth/forget": {
      "filePath": "auth/forget.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/error/404": {
      "filePath": "error/404.lazy.tsx"
    },
    "/front/about": {
      "filePath": "front/about.lazy.tsx",
      "parent": "/front"
    },
    "/front/Lesson/show": {
      "filePath": "front/Lesson/show.tsx",
      "parent": "/front"
    },
    "/front/chapter/project": {
      "filePath": "front/chapter/project.tsx",
      "parent": "/front"
    },
    "/front/chapter/show": {
      "filePath": "front/chapter/show.tsx",
      "parent": "/front"
    },
    "/front/chapter/system": {
      "filePath": "front/chapter/system.tsx",
      "parent": "/front"
    },
    "/front/topic/show": {
      "filePath": "front/topic/show.tsx",
      "parent": "/front"
    },
    "/front/video/show": {
      "filePath": "front/video/show.tsx",
      "parent": "/front"
    },
    "/front/Lesson/": {
      "filePath": "front/Lesson/index.tsx",
      "parent": "/front"
    },
    "/front/sign/": {
      "filePath": "front/sign/index.tsx",
      "parent": "/front"
    },
    "/front/subscribe/": {
      "filePath": "front/subscribe/index.tsx",
      "parent": "/front"
    },
    "/front/topic/": {
      "filePath": "front/topic/index.tsx",
      "parent": "/front"
    },
    "/front/video/": {
      "filePath": "front/video/index.tsx",
      "parent": "/front"
    }
  }
}
ROUTE_MANIFEST_END */
